

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}




model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String?   @unique
  username String @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  isAdmin Boolean?
  conversationIds String[] @db.ObjectId
  accounts Account[]
  dumpboxes DumpBox[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model DumpBox {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userIds   String[] @db.ObjectId
  ImageIds  String[]
  AdminsIds String[] @db.ObjectId
  user      User     @relation(fields: [userIds], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  images    Image[]
}



model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  DumpBoxId String @db.ObjectId
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  dumpbox DumpBox @relation(fields: [DumpBoxId],references: [id],onDelete: Cascade)
}
